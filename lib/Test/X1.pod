=head1 NAME

Test::X1 - A test manager

=head1 SYNOPSIS

  use Test::X1;
  use Test::More;
  
  test {
      my $c = shift;
      ok 1;
      ok 2;
      $c->done;
  };
  
  test {
      my $c = shift;
      my $timer; $timer = AnyEvent->timer(
          after => 2,
          cb => sub {
              test {
                  ok 2;
                  is 3, 0;
                  undef $timer;
                  $c->done;
              } $c;
          },
      );
      ok 1;
  } n => 3, name => ['anyevent', 'callback'];
  
  run_tests;
  
  # ok 1 - (1).1
  # ok 2 - (1).2
  # ok 3 - anyevent.callback (2).1
  # ok 4 - anyevent.callback (2).2
  not ok 5 - anyevent.callback (2).3
  #   Failed test 'anyevent.callback (2).3'
  #   at lib/Test/X1.pod line 24.
  #          got: '3'
  #     expected: '0'
  # anyevent.callback (2): 1 test failed
  1..5
  # Looks like you failed 1 test of 5.

=head1 DESCRIPTION

XXX

=head1 USAGE

XXX

=head2 Tests

XXX

The C<TEST_METHOD> environment variable can be used to specify the
regular expression used to filter the tests to run by their names.  If
the environment variable is not set, all tests are run.  Otherwise,
only the tests matching the pattern are run.  Please note that the
test name used to match is the string returned by C<< $c->test_name
>>, i.e. the C<name> option, if specified, followed by C< (>,
sequential test number, and C<)> (i.e. C<hoge (2)> or C<(1)>).

=head2 Context objects

XXX

The C<< $c->done >> method must be invoked when and only when all the
subtests belong to the test has been done.  Once the method has been
invoked, no subtest can be performed in the test.  If the method is
not invoked in the test, an error would be reported.

=head2 Test blocks

XXX

Test block can be named by the C<name> option:

  test {
    test {
      ok 1, 'Test X';
    } $c, name => 'hoge';
  };
  
  # ok 1 - (1).hoge.1 Test X

The C<TEST_BLOCK_SKIP> environment variable can be used to specify the
regular expression to skip the test blocks with names matching to the
pattern.  For example, C<TEST_BLOCK_SKIP=ho.*> would precent the C<ok>
statement in the example above from executed.

=head2 Subclassing

XXX

=head1 AUTHOR

Wakaba <wakabatan@hatena.ne.jp>.

=head1 LICENSE

Copyright 2012 Hatena <http://www.hatena.ne.jp/>.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
